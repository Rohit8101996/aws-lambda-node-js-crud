service: aws-node-http-api-project
frameworkVersion: '3'

provider:
  name: aws
  runtime: nodejs18.x
  region: ap-south-1
  iamRoleStatements: # this is to allow permissions to lambda to execute dynamodb 
    - Effect: Allow
      Action:
        - dynamodb:* 
        #or only PUT or some action level restrcitve to http request type
      Resource:
        - arn:aws:dynamodb:ap-south-1:907284181059:table/StudentTable

functions:
  hello:
    handler: src/hello.handler
    events:
      - httpApi:
          path: /
          method: get
  addStudent:
    handler: src/addStudent.handler
    events:
      - httpApi:
          path: /add
          method: post
  addStudentTwo:
    handler: src/addStudentTwo.handler
    events:
      - httpApi:
          path: /add/v2
          method: post
  fetchStudents:
    handler: src/fetchStudents.handler
    events:
      - httpApi:
          path: /list
          method: get
  fetchStudentById:
    handler: src/fetchStudentById.handler
    events:
      - httpApi:
          path: /{id}
          method: get
  updateStudent:
    handler: src/updateStudent.handler
    events:
      - httpApi:
          path: /{id}
          method: put

resources:
  Resources:
    StudentTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: StudentTable #resourcename and tablename doesnot need to be same ,resource name suggest all resources we want to provision while tbl name is dedicate to tbl name
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions: 
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id 
            KeyType: HASH
      #usersTable:
      #Type: AWS::DynamoDB::Table
      #Properties: 
      # TableName: usersTable
      # AttributeDefinitions:
      #    - AttributeName: email
      #      AttributeType: S
      #   KeySchema:
      #     - AttributeName: email
      #      KeyType: HASH
      #   ProvisionedThroughput: